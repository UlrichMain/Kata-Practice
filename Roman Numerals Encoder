#include<iostream>
#include<map>
#include<vector>
#include <string>
using namespace std;

std::string solution(int number){

  map<int, string> numerals ={ {1,"I"}, {4,"IV"} , {5, "V"}, {9, "IX"}, {10, "X"},{40,"XL"}, {50,"L"}, {90, "XC"} , {100, "C"}, {400, "CD"}, {500, "D"}, {900, "CM"}, {1000, "M"}};
  vector<int> values ={1,4,5, 9,10, 40,50, 90, 100, 400, 500, 900,1000};

  string solution ="";

  for (int i=12; i>=0 ; i--){

    while (number>= values[i]){
        solution+= numerals[values[i]];
        number=number - values[i];
    }
  }

  return solution;
}


// Best Solution
Actually very similar to mine just used an iterator which makes things slightly neater

#include<iostream>
#include<map>
#include<vector>
#include <string>
using namespace std;

std::string solution(int number){

  map<int, string> numerals ={ {1,"I"}, {4,"IV"} , {5, "V"}, {9, "IX"}, {10, "X"},{40,"XL"}, {50,"L"}, {90, "XC"} , {100, "C"}, {400, "CD"}, {500, "D"}, {900, "CM"}, {1000, "M"}};

  string solution ="";

  for (auto it = numerals.crbegin(); it != numerals.crend(); ){

    if (number> it->first){
        number -= it->first;
        solution+= it->second;
    }
    else
        it++;
  }
  return solution;
}
